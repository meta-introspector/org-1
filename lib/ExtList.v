(** File generated by coq-of-ocaml *)
Require Import CoqOfOCaml.CoqOfOCaml.
Require Import CoqOfOCaml.Settings.

Module ExtList.
  Record signature {elt : Set} : Set := {
    elt := elt;
    push : elt -> unit;
    get : unit -> list elt;
    update : (list elt -> list elt) -> unit;
  }.
End ExtList.
Definition ExtList := @ExtList.signature.
Arguments ExtList {_}.

Module Make.
  Class FArgs := {
    S : anonymous_signature;
  }.
  
  Definition elt `{FArgs} : Set := S.t.
  
  Definition r_value `{FArgs} : Stdlib.ref (list S.t) :=
    Stdlib.ref_value S.base.
  
  Definition push `{FArgs} (x_value : S.t) : unit :=
    Stdlib.op_coloneq r_value (cons x_value (Stdlib.op_exclamation r_value)).
  
  Definition get `{FArgs} (function_parameter : unit) : list S.t :=
    let '_ := function_parameter in
    Stdlib.op_exclamation r_value.
  
  Definition update `{FArgs} (f_value : list S.t -> list S.t) : unit :=
    Stdlib.op_coloneq r_value (f_value (Stdlib.op_exclamation r_value)).
  
  (* Make *)
  Definition functor `{FArgs} :=
    {|
      ExtList.push := push;
      ExtList.get := get;
      ExtList.update := update
    |}.
End Make.
Definition Make (S : anonymous_signature) : ExtList (elt := S.t) :=
  let '_ := Make.Build_FArgs S in
  Make.functor.
