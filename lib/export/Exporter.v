(** File generated by coq-of-ocaml *)
Require Import CoqOfOCaml.CoqOfOCaml.
Require Import CoqOfOCaml.Settings.

Module Exporter.
  Record signature : Set := {
    name : string;
    default_filename : string -> string;
  }.
End Exporter.
Definition Exporter := Exporter.signature.

Definition exporter : Set := {_ : unit @ Exporter}.

Definition find (name : string)
  : list {_ : unit @ Exporter} -> {_ : unit @ Exporter} :=
  Stdlib.List.find
    (fun (m_value : {_ : unit @ Exporter}) =>
      let 'existS _ _ M := m in
      equiv_decb M.(Exporter.name) name).

Module Exporters.
  Module nameless_include.
  
  End nameless_include.
  
  Include nameless_include.
  
  Definition run {A B C D : Set}
    (exporter : {_ : unit @ Exporter}) (config : A) (doc : B) (output : C)
    : D :=
    let 'existS _ _ M := exporter in
    op_startypeminuserrorstar config doc output.
  
  Definition find (name : string) : {_ : unit @ Exporter} :=
    find name (op_startypeminuserrorstar tt).
  
  Definition add {A : Set} : A := op_startypeminuserrorstar.
End Exporters.
